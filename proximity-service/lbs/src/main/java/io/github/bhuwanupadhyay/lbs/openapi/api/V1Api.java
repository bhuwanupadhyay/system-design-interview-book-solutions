/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (6.2.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package io.github.bhuwanupadhyay.lbs.openapi.api;

import java.math.BigDecimal;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import javax.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2022-09-30T11:25:59.555712678-05:00[America/Chicago]")
@Validated
@Tag(name = "v1", description = "the v1 API")
@RequestMapping("${openapi.proximityServiceLocationBasedSearch.base-path:}")
public interface V1Api {

    default V1ApiDelegate getDelegate() {
        return new V1ApiDelegate() {};
    }

    /**
     * GET /v1/search/nearby
     * Returns businesses based on certain search criteria. In real-life application, search result are usually paginated. 
     *
     * @param latitude Latitude of a given location (required)
     * @param longitude Longitude of a given location (required)
     * @param radius Search radius [Optional. Default is 500 meters (about 3 miles)] (optional)
     * @return List of business objects (status code 200)
     */
    @Operation(
        operationId = "v1SearchNearbyGet",
        responses = {
            @ApiResponse(responseCode = "200", description = "List of business objects")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/v1/search/nearby"
    )
    default ResponseEntity<Void> v1SearchNearbyGet(
        @NotNull @Parameter(name = "latitude", description = "Latitude of a given location", required = true) @Valid @RequestParam(value = "latitude", required = true) BigDecimal latitude,
        @NotNull @Parameter(name = "longitude", description = "Longitude of a given location", required = true) @Valid @RequestParam(value = "longitude", required = true) BigDecimal longitude,
        @Parameter(name = "radius", description = "Search radius [Optional. Default is 500 meters (about 3 miles)]") @Valid @RequestParam(value = "radius", required = false) Integer radius
    ) {
        return getDelegate().v1SearchNearbyGet(latitude, longitude, radius);
    }

}
